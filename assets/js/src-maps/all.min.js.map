{"version":3,"sources":["all.js"],"names":["chunkArray","arr","chunkSize","results","length","push","splice","capFirstLetter","string","charAt","toUpperCase","slice","processUserData","data","hasOwnProperty","error","chunked","usersContent","forEach","chunk","row","person","firstName","name","first","lastName","last","picture","thumbnail","email","document","getElementById","innerHTML","requestUsers","event","gender","target","id","fetch","then","response","ok","json","url","status","catch","console","log","buttons","getElementsByClassName","i","addEventListener","e"],"mappings":"AACA,MAAMA,WAAa,CAACC,EAAKC,KACvB,MAAMC,EAAU,GAEhB,KAAOF,EAAIG,QACTD,EAAQE,KAAKJ,EAAIK,OAAO,EAAGJ,IAG7B,OAAOC,GAIHI,eAAiBC,GAAUA,EAAOC,OAAO,GAAGC,cAAgBF,EAAOG,MAAM,GAEzEC,gBAAmBC,IAEvB,GAAIA,EAAKC,eAAe,SACtB,6BAA8BD,EAAKE,QAIrC,IAAIC,EAAUhB,WAAWa,EAAKV,QAAS,GAEnCc,EAAe,GAGnBD,EAAQE,QAASC,IACf,IAAIC,EAAM,wBACVD,EAAMD,QAASG,IACb,MAAMC,EAAYf,eAAec,EAAOE,KAAKC,OACvCC,EAAWlB,eAAec,EAAOE,KAAKG,MAG5CN,iUAOsCC,EAAOM,QAAQC,+MAIPN,KAAaG,+DACVJ,EAAOQ,8IAS1DZ,GADAG,GAAO,WAKTU,SAASC,eAAe,SAASC,UAAYf,GAGzCgB,aAAgBC,IACpB,MAAMC,EAASD,EAAME,OAAOC,GAE5B,GAAe,SAAXF,GAAgC,WAAXA,EAGvB,iCAAkCA,IAGpCG,qDAAqDH,4BAClDI,KAAMC,IACL,GAAIA,EAASC,GACX,OAAOD,EAASE,OAElB,sBAAuBF,EAASG,4BAA4BH,EAASI,WAEtEL,KAAM1B,IACLD,gBAAgBC,KAEjBgC,MAAO9B,IACNe,SAASC,eAAe,SAASC,UAAY,+DAC7Cc,QAAQC,IAAIhC,MAKZiC,QAAUlB,SAASmB,uBAAuB,UAEhD,IAAK,IAAIC,EAAI,EAAGA,EAAIF,QAAQ5C,OAAQ8C,GAAK,EACvCF,QAAQE,GAAGC,iBAAiB,QAAUjB,IACpC,IACED,aAAaC,GACb,MAAOkB,GACPtB,SAASC,eAAe,SAASC,UAAY,+DAC7Cc,QAAQC,IAAIK","file":"../all.min.js","sourcesContent":["// Split an array into sub arrays of a particular size\nconst chunkArray = (arr, chunkSize) => { // eslint-disable-line\n  const results = [];\n\n  while (arr.length) {\n    results.push(arr.splice(0, chunkSize));\n  }\n\n  return results;\n};\n\n// Capatilize the first letting of the provided string\nconst capFirstLetter = string => string.charAt(0).toUpperCase() + string.slice(1); // eslint-disable-line\n\nconst processUserData = (data) => {\n  // Throw error if error returned from randomuser.me\n  if (data.hasOwnProperty('error')) { // eslint-disable-line\n    throw `randomuser.me error: ${data.error}`;\n  }\n\n  // Chunk the returned users into groups of 3\n  let chunked = chunkArray(data.results, 3); // eslint-disable-line\n\n  let usersContent = '';\n\n  // Prepare each user chunk onto it's own columned row\n  chunked.forEach((chunk) => {\n    let row = '<div class=\"columns\">';\n    chunk.forEach((person) => {\n      const firstName = capFirstLetter(person.name.first); // eslint-disable-line\n      const lastName = capFirstLetter(person.name.last); // eslint-disable-line\n\n      // Build out the user card per user\n      row += `\n        <div class=\"column is-one-third\">\n            <div class='card'>\n                <div class=\"card-content\">\n                    <div class=\"media\">\n                        <div class=\"media-left\">\n                            <figure class=\"image is-48x48\">\n                                <img src=\"${person.picture.thumbnail}\" alt=\"User Image\">\n                            </figure>\n                        </div>\n                        <div class=\"media-content\">\n                            <p class=\"title is-4\">${firstName} ${lastName}</p>\n                            <p class=\"subtitle is-6\">${person.email}</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n      `;\n    });\n    row += '</div>';\n    usersContent += row;\n  });\n\n  // Display the generated user list to the end user\n  document.getElementById('users').innerHTML = usersContent; // eslint-disable-line\n};\n\nconst requestUsers = (event) => {\n  const gender = event.target.id;\n  // Check if gender is properly set\n  if (gender === 'male' || gender === 'female') {\n    // Carry on\n  } else {\n    throw `Incorrect gender passed: ${gender}`;\n  }\n\n  fetch(`https://randomuser.me/api/?results=9&gender=${gender}&inc=name,email,picture`) // eslint-disable-line\n    .then((response) => {\n      if (response.ok) {\n        return response.json();\n      }\n      throw `Fetch to url \"${response.url}\" failed with status: ${response.status}`;\n    })\n    .then((data) => {\n      processUserData(data);\n    })\n    .catch((error) => {\n      document.getElementById('users').innerHTML = 'Whoops! Something went wrong, check console for more details'; // eslint-disable-line\n      console.log(error);\n    });\n};\n\n// Add Event Listeners\nconst buttons = document.getElementsByClassName('button'); // eslint-disable-line\n\nfor (let i = 0; i < buttons.length; i += 1) {\n  buttons[i].addEventListener('click', (event) => {\n    try {\n      requestUsers(event);\n    } catch (e) {\n      document.getElementById('users').innerHTML = 'Whoops! Something went wrong, check console for more details'; // eslint-disable-line\n      console.log(e);\n    }\n  });\n}\n"]}